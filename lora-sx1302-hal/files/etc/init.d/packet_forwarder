#!/bin/sh /etc/rc.common

START=90
STOP=10

USE_PROCD=1

. /usr/share/libubox/jshn.sh

wm=NONE

load_lora_mode() {
    json_init
    json_load_file /etc/lorawan_workmode/lorawan_workmode.conf
    json_get_var wm work_mode
    echo $wm
}

check_eth0() {
  if ip link show eth0.2 >/dev/null 2>&1; then
    if ip link show eth0.2 | grep -q "state UP"; then
      if ifconfig eth0.2 | grep -Eq 'inet (addr:)?([0-9]+\.){3}[0-9]+'; then
        echo "eth0.2 up"
        return 0
      fi
    fi
  fi
  return 1
}

check_usb0() {
  if ip link show usb0 >/dev/null 2>&1; then
      if ifconfig usb0 | grep -qE 'inet (addr:)?([0-9]+\.){3}[0-9]+'; then
        echo "usb0 up"
        return 0
      fi
  fi

  return 1
}

check_wlan0() {
  if ip link show wlan0 >/dev/null 2>&1; then
      if ifconfig wlan0 | grep -qE 'inet (addr:)?([0-9]+\.){3}[0-9]+'; then
        echo "wlan0 up"
        return 0
      fi
  fi

  return 1
}

check_chip_id() {
    # 获取 /sys/class/spidev/ 目录下的 spi 设备列表,取第一个
    spi_device=$(ls /sys/class/spidev/ | awk '{print $1;}')

    cd /usr/bin
    # 执行 chip_id 命令并读取输出
    output=$(./chip_id -d /dev/$spi_device)

    # 检查输出中是否包含 "ERROR" 字符串,有则说明spi通信不上
    if [[ $output == *"ERROR"* ]]; then
        echo "Failed to start spidev."
        echo 0 > /sys/class/leds/led_lora/brightness
        return 1
    else
        #默认高电平
        # echo 1 > /sys/class/leds/led_lora/brightness
        return 0
    fi
}

start_service() {
    load_lora_mode
    if [ "$wm" = "PKFD" ] || [ "$wm" = "BRDG" ]; then
        timeout=300
        interval=5
        elapsed=0
        while true; do
            check_eth0
            eth_status=$?
            check_usb0
            usb_status=$?
            check_wlan0
            wlan_status=$?
            if [[ $eth_status != 0 && $usb_status != 0 && $wlan_status != 0 ]];then
                echo "Network if is down, waiting...."
                sleep $interval
            else
                echo "Network Ready."
                break
            fi
            sleep $interval
            ((elapsed +=interval))
            if ((elapsed >= timeout));then
                echo "Network timeout"
                exit 0
            fi
        done
            echo '------packet forwarder starting-----'
            procd_open_instance
            procd_set_param command  /usr/bin/lora_pkt_fwd
            procd_append_param command -c /etc/lora_pkt_fwd/global_conf.json
            #procd_set_param respawn 5 2 0
            procd_set_param stdout 1 # forward stdout of the command to logd
            procd_set_param stderr 1 # same for stderr
            procd_close_instance

    # 第一次出厂没有配置的时候，检测LoRa模块是否安装
    elif [ "$wm" = "unknown" ];then
        check_chip_id
    fi

}

reload_service() {
    stop
    start
}
